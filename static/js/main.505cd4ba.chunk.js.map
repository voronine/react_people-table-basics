{"version":3,"sources":["components/NavBar.tsx","App.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeoplePage.tsx","components/PeopleTable.tsx","api.ts","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["NavBar","getLinkClass","isActive","cn","className","role","to","App","HomePage","replace","Loader","PersonLink","person","slug","sex","name","PeoplePage","selectedPerson","born","died","mother","motherName","father","fatherName","PeopleTable","people","useParams","personId","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","getPreparedPeople","find","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","fetchData","peopleFromServer","length","NotFoundPage","Root","path","element","index","createRoot","document","getElementById","render"],"mappings":"sQAGaA,EAAS,WACpB,IAAMC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAyCC,IAC5D,cACA,CAAE,8BAA+BD,GAFd,EAKrB,OACE,qBACE,UAAQ,MACRE,UAAU,iCACVC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAWH,EACXK,GAAG,IAFL,kBAOA,cAAC,IAAD,CACEF,UAAWH,EACXK,GAAG,UAFL,0BAUT,EC/BYC,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAMH,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UANW,ECFNI,EAAW,WACtB,OACE,qCACE,oBAAIJ,UAAU,QAAd,uBACA,cAAC,IAAD,CAAUE,GAAG,IAAIG,SAAO,MAG7B,E,oCCPYC,G,MAAS,kBACpB,qBAAKN,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,G,OCUTO,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,cAAC,IAAD,CACEN,GAAIM,EAAOC,KACXT,UAAWD,IAAG,eAXH,MAYRS,EAAOE,IAXO,kBACF,iBAUwC,IAHzD,SAMGF,EAAOG,MAP+B,ECH9BC,EAA8B,SAAC,GAAgC,IAA9BJ,EAA6B,EAA7BA,OAAQK,EAAqB,EAArBA,eACpD,OACE,qBACE,UAAQ,SACRb,UACED,IAAG,CACD,yBAA0Bc,IAAmBL,EAAOC,OAJ1D,UAQE,6BACE,cAAC,EAAD,CAAYD,OAAQA,MAGtB,6BAAKA,EAAOE,MACZ,6BAAKF,EAAOM,OACZ,6BAAKN,EAAOO,OACZ,6BACGP,EAAOQ,OAEJ,cAAC,EAAD,CAAYR,OAAQA,EAAOQ,SAE3BR,EAAOS,YAAc,MAG3B,6BACGT,EAAOU,OAEJ,cAAC,EAAD,CAAYV,OAAQA,EAAOU,SAE3BV,EAAOW,YAAc,QAKhC,ECxCYC,EAAc,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,OAC5B,EAA0BC,cAAlBC,gBAAR,MAAmB,GAAnB,EAEA,OACE,wBACE,UAAQ,cACRvB,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGqB,EAAOG,KAAI,SAAChB,GAAD,OACV,cAAC,EAAD,CACEA,OAAQA,EAERK,eAAgBU,GADXf,EAAOC,KAHJ,QAUnB,ECzBM,SAASgB,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,CCRD,IAAMQ,EAAoB,SAACb,GACzB,OAAOA,EAAOG,KAAI,SAAAhB,GAChB,OAAO,2BACFA,GADL,IAEEQ,OAAQK,EAAOc,MAAK,SAAAnB,GAAM,OAAIA,EAAOL,OAASH,EAAOS,UAA3B,IAC1BC,OAAQG,EAAOc,MAAK,SAAAjB,GAAM,OAAIA,EAAOP,OAASH,EAAOW,UAA3B,KAE7B,GACF,EAEYP,EAAa,WACxB,MAA4BwB,mBAAmB,IAA/C,mBAAOf,EAAP,KAAegB,EAAf,KACA,EAAkCD,oBAAkB,GAApD,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA8BH,oBAAkB,GAAhD,mBAAOI,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,qBAAU,WACR,IAAMC,EAAS,iDAAG,8GAEdJ,GAAa,GAFC,SAGiBd,IAHjB,OAGRmB,EAHQ,OAKdP,EAAUH,EAAkBU,IALd,gDAOdH,GAAW,GAPG,yBASdF,GAAa,GATC,4EAAH,qDAafI,GACD,GAAE,IAGD,qCACE,oBAAI3C,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGsC,GACC,cAAC,EAAD,IAGDE,IAAYF,GACX,mBACE,UAAQ,qBACRtC,UAAU,kBAFZ,oCAQD,OAACqB,QAAD,IAACA,KAAQwB,UAAWP,IAAcE,GACjC,mBACE,UAAQ,kBADV,iDAOA,OAACnB,QAAD,IAACA,MAAQwB,UAAWL,GACpB,cAAC,EAAD,CAAanB,OAAQA,WAOhC,ECzEYyB,EAAe,WAC1B,OACE,oBAAI9C,UAAU,QAAd,2BAEH,ECSY+C,EAAO,kBAClB,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAU/C,GAAG,IAAIG,SAAO,MACpD,cAAC,IAAD,CAAO2C,KAAK,SAASC,QAAS,cAAC,EAAD,IAA9B,SACE,cAAC,IAAD,CAAOD,KAAK,uBARF,ECNpBG,qBAAWC,SAASC,eAAe,SAChCC,OAAO,cAAC,EAAD,I","file":"static/js/main.505cd4ba.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar = () => {\n  const getLinkClass = ({ isActive }: { isActive: boolean }) => cn(\n    'navbar-item',\n    { 'has-background-grey-lighter': isActive },\n  );\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import { Navigate } from 'react-router-dom';\n\nexport const HomePage = () => {\n  return (\n    <>\n      <h1 className=\"title\">Home Page</h1>\n      <Navigate to=\"/\" replace />\n    </>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\nconst FEMALE = 'f';\nconst FEMALE_COLOR = 'has-text-danger';\nconst MALE_COLOR = 'has-text-link';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={person.slug}\n    className={cn({\n      [person.sex === FEMALE ? FEMALE_COLOR : MALE_COLOR]: true,\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","import cn from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person;\n  selectedPerson: string;\n};\n\nexport const PeoplePage: React.FC<Props> = ({ person, selectedPerson }) => {\n  return (\n    <tr\n      data-cy=\"person\"\n      className={\n        cn({\n          'has-background-warning': selectedPerson === person.slug,\n        })\n      }\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.mother\n          ? (\n            <PersonLink person={person.mother} />\n          ) : (\n            person.motherName || '-'\n          )}\n      </td>\n      <td>\n        {person.father\n          ? (\n            <PersonLink person={person.father} />\n          ) : (\n            person.fatherName || '-'\n          )}\n      </td>\n    </tr>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { PeoplePage } from './PeoplePage';\nimport { Person } from '../types';\n\nexport const PeopleTable = ({ people }: { people: Person[] }) => {\n  const { personId = '' } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => (\n          <PeoplePage\n            person={person}\n            key={person.slug}\n            selectedPerson={personId}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nconst getPreparedPeople = (people: Person[]): Person[] => {\n  return people.map(person => {\n    return {\n      ...person,\n      mother: people.find(mother => mother.name === person.motherName),\n      father: people.find(father => father.name === person.fatherName),\n    };\n  });\n};\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isError, setIsError] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const peopleFromServer = await getPeople();\n\n        setPeople(getPreparedPeople(peopleFromServer));\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isError && !isLoading && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n          )}\n\n          {!people?.length && !isLoading && !isError && (\n            <p\n              data-cy=\"noPeopleMessage\"\n            >\n              There are no people on the server\n            </p>\n          )}\n\n          {!!people?.length && !isError && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport { App } from './App';\n\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route path=\"*\" element={<NotFoundPage />} />\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":personId?\" />\n        </Route>\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}